{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.e4121098.map","sourceRoot":"..\\src","sourcesContent":["// 目标一：实现新增功能，并且LOGO为首字母\r\n// 目标二：保存用户数据\r\n// 目标三：优化url，避免因用户复制的链接有很多后缀导致link显示太长。解决方法：使用正则，删除/及后面的内容\r\n// 目标四：删除功能，其中要实现阻止跳转页面事件冒泡，不然点删除也会跳转页面而不是期望的删除事件\r\n// 目标五：做PC端，会使用到@media\r\n// 目标六：添加键盘事件：用户输入单个字母就打开与其logo相同字母的网站\r\n\r\n\r\nconst $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)\r\n\r\n// 保存数据--这个还没学，在算法与数据结构课程里                  \r\nconst hashMap = xObject || [\r\n    { logo: 'X', url: 'https://xiedaimala.com'}, \r\n    // { logo: './zhihu.jpg', logoType: 'image', url: 'https://www.zhihu.com'},\r\n    { logo: 'Z', url: 'https://www.zhihu.com'},\r\n    { logo: 'M', url: 'https://developer.mozilla.org'}\r\n]\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n    .replace('http://', '')\r\n    .replace('www.', '')\r\n    .replace(/\\/.*/, '')     // 删除/及后面的内容\r\n}\r\n\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove()     // 不找最后一个li，并且把之前的li都删掉\r\n    hashMap.forEach((node, index) => {\r\n        // .close那里，关闭按钮一律不要用x，这里是老师为了偷懒，后期自己要进行优化\r\n        // 添加链接时不要用a标签，会导致阻止冒泡失败\r\n        const $li = $(`<li>\r\n                <div class=\"site\">\r\n                    <div class=\"logo\">${node.logo}</div>\r\n                    <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                    <div class=\"close\">\r\n                        <svg class=\"icon\">\r\n                          <use xlink:href=\"#icon-close\"></use>\r\n                        </svg>\r\n                    </div>\r\n                </div> \r\n            </li>`).insertBefore($lastLi)\r\n            // 代替a标签，给li添加链接\r\n            $li.on('click', () => {\r\n                window.open(node.url)\r\n            })\r\n            // 阻止冒泡 以及 删除网站并重新渲染\r\n            $li.on('click', '.close', (e) => {\r\n                e.stopPropagation()\r\n                hashMap.splice(index, 1)\r\n                render()\r\n            })\r\n    })    \r\n}\r\nrender();\r\n\r\n$('.addButton') \r\n .on('click', () => {\r\n     // 用户输入自己想进入的网址\r\n     let url = window.prompt('请问您要添加什么网站？')\r\n    // 识别用户输入的网址链接格式是否正确 (这里是检查网址是否是http开头的，如果不是，那么自动补上)\r\n    if(url.indexOf('http') !== 0) {\r\n       url = 'https://' + url\r\n    }\r\n    console.log(url)\r\n    // 实现功能：点击新增网站，会增加一个小方块，有自己的logo和链接等，并且logo是网站的首字母\r\n    hashMap.push({\r\n        logo: simplifyUrl(url)[0].toUpperCase(),\r\n        url: url\r\n    })\r\n    render()\r\n})\r\n\r\nwindow.onbeforeunload = () => {\r\n    console.log('页面即将关闭')\r\n    // localStorage只能存字符串\r\n    const string = JSON.stringify(hashMap)\r\n    // console.log(typeof hashMap)\r\n    // console.log(hashMap)\r\n    // console.log(typeof string)\r\n    // console.log(string)\r\n    // 在本地的存储里面设置一个x，它的值就是string\r\n    localStorage.setItem('x', string)\r\n}\r\n\r\n// 监听键盘事件\r\n$(document).on('keypress', (e) => {\r\n    console.log(e.key)\r\n    // const key = e.key 简写成下面的\r\n    const {key} = e\r\n    for(let i = 0; i < hashMap.length; i++) {\r\n        if(hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n"]}